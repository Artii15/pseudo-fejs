CREATE KEYSPACE IF NOT EXISTS Test
WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 4 };

USE Test;

DROP TABLE IF EXISTS users;
CREATE TABLE users (
    nick varchar,
    searchable_nick varchar,
    password varchar,
    time_id timeuuid,
    PRIMARY KEY (nick, time_id)
);

DROP INDEX IF EXISTS user_nick_prefix;
CREATE CUSTOM INDEX user_nick_prefix ON users(searchable_nick)
USING 'org.apache.cassandra.index.sasi.SASIIndex';

DROP TABLE IF EXISTS posts;
CREATE TABLE posts (
    author varchar,
    time_id timeuuid,
    content text,
    PRIMARY KEY(author, time_id)
)
WITH CLUSTERING ORDER BY (time_id DESC);

DROP TABLE IF EXISTS subscriptions;
CREATE TABLE subscriptions (
    subscriber varchar,
    subscribed_person varchar,
    PRIMARY KEY(subscriber, subscribed_person)
);

DROP TABLE IF EXISTS posts_counters;
CREATE TABLE posts_counters (
    author varchar,
    time_id timeuuid,
    likes counter,
    comments counter,
    PRIMARY KEY(author, time_id)
);

DROP TABLE IF EXISTS comments;
CREATE TABLE comments (
     post_author varchar,
     post_time_id timeuuid,
     comment_time_id timeuuid,
     comment_author varchar,
     content text,
     id uuid,
     parent_id varchar,
     PRIMARY KEY((post_author, post_time_id), comment_time_id, comment_author)
);

DROP TABLE IF EXISTS comments_counters;
CREATE TABLE comments_counters (
    post_author varchar,
    post_time_id timeuuid,
    comment_time_id timeuuid,
    comment_author varchar,
    likes counter,
    answers counter,
    PRIMARY KEY((post_author, post_time_id, comment_time_id, comment_author))
);

DROP TABLE IF EXISTS events;
CREATE TABLE events (
    year int,
    start_date timestamp,
    end_date timestamp,
    id uuid,
    participants set<varchar>,
    description text,
    author varchar,
    name varchar,
    PRIMARY KEY(year, start_date, end_date, id)
);

DROP TABLE IF EXISTS events_counters;
CREATE TABLE events_counters (
    id uuid,
    max_users_count counter,
    current_users_count counter,
    PRIMARY KEY(id)
);